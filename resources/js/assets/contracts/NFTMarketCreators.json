{
  "contractName": "NFTMarketCreators",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"In the future this may store creators directly in order to support NFTs created on a different platform.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"A mixin for associating creators to NFTs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/minted/mixins/NFTMarketCreators.sol\":\"NFTMarketCreators\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x8b2abd85d0ece7e866e100e9d47ca9cbec93c87cf71a8d267b2b93eb81f7d5e9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe9fa1beb63e4a09637701f783982ba80380d630d600c9cafe26b68bf58be1b2\",\"dweb:/ipfs/QmRA3GXhTWys88joD9x8xYhdjzvGwmDGLMMzGw3LxbSEge\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x89fa60d14355f7ae06af11e28fce2bb90c5c6186645d681a30e1b36234a4c210\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f05bc422cea1903d9ba10eece86d8bce72c2f1a225f174101b992b978534c2d\",\"dweb:/ipfs/QmQzi5ZMexyRRfkyur7G2uHUmaQg4VfvCkUuxbSdqsXTSv\"]},\"project:/contracts/minted/interfaces/IMINTEDNFT721.sol\":{\"keccak256\":\"0xffce0349cc3169242ea6a7b2353f87d503a975628d37dae867f830638455ec3b\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://c7f3610f192819287d0174361c30d9c9f3beb24c4d104f32d7739c3ba3bb99e6\",\"dweb:/ipfs/QmPpH4e9cRtiGuKBbBJYoUr86X2qHk6Q5gwkRAKnCE5nFy\"]},\"project:/contracts/minted/mixins/NFTMarketCreators.sol\":{\"keccak256\":\"0x9691c5ea49932827d945b3c1e66448bffbac702c65bb103be74cce28c450dd77\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://1839f92f91e4bc25a5c585076d77b5753231237043cdccdaaf48f48b2d7baffc\",\"dweb:/ipfs/QmT9DRok6subTjrJEfh9RzkGX5os7HVPmrgdts2h5ufGBJ\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT OR Apache-2.0\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../interfaces/IMINTEDNFT721.sol\";\r\n\r\nimport \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\";\r\n\r\n/**\r\n * @notice A mixin for associating creators to NFTs.\r\n * @dev In the future this may store creators directly in order to support NFTs created on a different platform.\r\n */\r\nabstract contract NFTMarketCreators is\r\n  ReentrancyGuardUpgradeable // Adding this unused mixin to help with linearization\r\n{\r\n  /**\r\n   * @dev If the creator is not available then 0x0 is returned. Downstream this indicates that the creator\r\n   * fee should be sent to the current seller instead.\r\n   * This may apply when selling NFTs that were not minted on Minted.\r\n   */\r\n  function getCreator(address nftContract, uint256 tokenId) internal view returns (address payable) {\r\n    try IMINTEDNFT721(nftContract).tokenCreator(tokenId) returns (address payable creator) {\r\n      return creator;\r\n    } catch {\r\n      return payable(0);\r\n    }\r\n  }\r\n\r\n  // 500 slots were added via the new SendValueWithFallbackWithdraw mixin\r\n  uint256[500] private ______gap;\r\n}",
  "sourcePath": "C:\\alex\\nft\\openZeppelin\\mintedBasic\\contracts\\minted\\mixins\\NFTMarketCreators.sol",
  "ast": {
    "absolutePath": "project:/contracts/minted/mixins/NFTMarketCreators.sol",
    "exportedSymbols": {
      "IMINTEDNFT721": [
        5171
      ],
      "Initializable": [
        453
      ],
      "NFTMarketCreators": [
        7024
      ],
      "ReentrancyGuardUpgradeable": [
        511
      ]
    },
    "id": 7025,
    "license": "MIT OR Apache-2.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6982,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "49:23:44"
      },
      {
        "absolutePath": "project:/contracts/minted/interfaces/IMINTEDNFT721.sol",
        "file": "../interfaces/IMINTEDNFT721.sol",
        "id": 6983,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7025,
        "sourceUnit": 5172,
        "src": "76:41:44",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
        "id": 6984,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7025,
        "sourceUnit": 512,
        "src": "121:85:44",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 6986,
              "name": "ReentrancyGuardUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 511,
              "src": "430:26:44"
            },
            "id": 6987,
            "nodeType": "InheritanceSpecifier",
            "src": "430:26:44"
          }
        ],
        "canonicalName": "NFTMarketCreators",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 6985,
          "nodeType": "StructuredDocumentation",
          "src": "210:176:44",
          "text": " @notice A mixin for associating creators to NFTs.\n @dev In the future this may store creators directly in order to support NFTs created on a different platform."
        },
        "fullyImplemented": true,
        "id": 7024,
        "linearizedBaseContracts": [
          7024,
          511,
          453
        ],
        "name": "NFTMarketCreators",
        "nameLocation": "406:17:44",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 7018,
              "nodeType": "Block",
              "src": "865:171:44",
              "statements": [
                {
                  "clauses": [
                    {
                      "block": {
                        "id": 7008,
                        "nodeType": "Block",
                        "src": "959:31:44",
                        "statements": [
                          {
                            "expression": {
                              "id": 7006,
                              "name": "creator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7004,
                              "src": "975:7:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "functionReturnParameters": 6996,
                            "id": 7007,
                            "nodeType": "Return",
                            "src": "968:14:44"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 7009,
                      "nodeType": "TryCatchClause",
                      "parameters": {
                        "id": 7005,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 7004,
                            "mutability": "mutable",
                            "name": "creator",
                            "nameLocation": "950:7:44",
                            "nodeType": "VariableDeclaration",
                            "scope": 7009,
                            "src": "934:23:44",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            "typeName": {
                              "id": 7003,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "934:15:44",
                              "stateMutability": "payable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "933:25:44"
                      },
                      "src": "925:65:44"
                    },
                    {
                      "block": {
                        "id": 7015,
                        "nodeType": "Block",
                        "src": "997:34:44",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 7012,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1021:1:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 7011,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1013:8:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 7010,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1013:8:44",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 7013,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1013:10:44",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "functionReturnParameters": 6996,
                            "id": 7014,
                            "nodeType": "Return",
                            "src": "1006:17:44"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 7016,
                      "nodeType": "TryCatchClause",
                      "src": "991:40:44"
                    }
                  ],
                  "externalCall": {
                    "arguments": [
                      {
                        "id": 7001,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6992,
                        "src": "916:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 6998,
                            "name": "nftContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6990,
                            "src": "890:11:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 6997,
                          "name": "IMINTEDNFT721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5171,
                          "src": "876:13:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IMINTEDNFT721_$5171_$",
                            "typeString": "type(contract IMINTEDNFT721)"
                          }
                        },
                        "id": 6999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "876:26:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMINTEDNFT721_$5171",
                          "typeString": "contract IMINTEDNFT721"
                        }
                      },
                      "id": 7000,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tokenCreator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5170,
                      "src": "876:39:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_payable_$",
                        "typeString": "function (uint256) view external returns (address payable)"
                      }
                    },
                    "id": 7002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "876:48:44",
                    "tryCall": true,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 7017,
                  "nodeType": "TryStatement",
                  "src": "872:159:44"
                }
              ]
            },
            "documentation": {
              "id": 6988,
              "nodeType": "StructuredDocumentation",
              "src": "518:245:44",
              "text": " @dev If the creator is not available then 0x0 is returned. Downstream this indicates that the creator\n fee should be sent to the current seller instead.\n This may apply when selling NFTs that were not minted on Minted."
            },
            "id": 7019,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCreator",
            "nameLocation": "776:10:44",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6993,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6990,
                  "mutability": "mutable",
                  "name": "nftContract",
                  "nameLocation": "795:11:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 7019,
                  "src": "787:19:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6989,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "787:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6992,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "816:7:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 7019,
                  "src": "808:15:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6991,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "808:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "786:38:44"
            },
            "returnParameters": {
              "id": 6996,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6995,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7019,
                  "src": "848:15:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 6994,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "848:15:44",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "847:17:44"
            },
            "scope": 7024,
            "src": "767:269:44",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7023,
            "mutability": "mutable",
            "name": "______gap",
            "nameLocation": "1138:9:44",
            "nodeType": "VariableDeclaration",
            "scope": 7024,
            "src": "1117:30:44",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$500_storage",
              "typeString": "uint256[500]"
            },
            "typeName": {
              "baseType": {
                "id": 7020,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1117:7:44",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 7022,
              "length": {
                "hexValue": "353030",
                "id": 7021,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1125:3:44",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_500_by_1",
                  "typeString": "int_const 500"
                },
                "value": "500"
              },
              "nodeType": "ArrayTypeName",
              "src": "1117:12:44",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$500_storage_ptr",
                "typeString": "uint256[500]"
              }
            },
            "visibility": "private"
          }
        ],
        "scope": 7025,
        "src": "388:763:44",
        "usedErrors": []
      }
    ],
    "src": "49:1102:44"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/minted/mixins/NFTMarketCreators.sol",
    "exportedSymbols": {
      "IMINTEDNFT721": [
        5171
      ],
      "Initializable": [
        453
      ],
      "NFTMarketCreators": [
        7024
      ],
      "ReentrancyGuardUpgradeable": [
        511
      ]
    },
    "id": 7025,
    "license": "MIT OR Apache-2.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6982,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "49:23:44"
      },
      {
        "absolutePath": "project:/contracts/minted/interfaces/IMINTEDNFT721.sol",
        "file": "../interfaces/IMINTEDNFT721.sol",
        "id": 6983,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7025,
        "sourceUnit": 5172,
        "src": "76:41:44",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
        "id": 6984,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7025,
        "sourceUnit": 512,
        "src": "121:85:44",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 6986,
              "name": "ReentrancyGuardUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 511,
              "src": "430:26:44"
            },
            "id": 6987,
            "nodeType": "InheritanceSpecifier",
            "src": "430:26:44"
          }
        ],
        "canonicalName": "NFTMarketCreators",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 6985,
          "nodeType": "StructuredDocumentation",
          "src": "210:176:44",
          "text": " @notice A mixin for associating creators to NFTs.\n @dev In the future this may store creators directly in order to support NFTs created on a different platform."
        },
        "fullyImplemented": true,
        "id": 7024,
        "linearizedBaseContracts": [
          7024,
          511,
          453
        ],
        "name": "NFTMarketCreators",
        "nameLocation": "406:17:44",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 7018,
              "nodeType": "Block",
              "src": "865:171:44",
              "statements": [
                {
                  "clauses": [
                    {
                      "block": {
                        "id": 7008,
                        "nodeType": "Block",
                        "src": "959:31:44",
                        "statements": [
                          {
                            "expression": {
                              "id": 7006,
                              "name": "creator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7004,
                              "src": "975:7:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "functionReturnParameters": 6996,
                            "id": 7007,
                            "nodeType": "Return",
                            "src": "968:14:44"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 7009,
                      "nodeType": "TryCatchClause",
                      "parameters": {
                        "id": 7005,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 7004,
                            "mutability": "mutable",
                            "name": "creator",
                            "nameLocation": "950:7:44",
                            "nodeType": "VariableDeclaration",
                            "scope": 7009,
                            "src": "934:23:44",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            "typeName": {
                              "id": 7003,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "934:15:44",
                              "stateMutability": "payable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "933:25:44"
                      },
                      "src": "925:65:44"
                    },
                    {
                      "block": {
                        "id": 7015,
                        "nodeType": "Block",
                        "src": "997:34:44",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 7012,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1021:1:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 7011,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1013:8:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 7010,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1013:8:44",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 7013,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1013:10:44",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "functionReturnParameters": 6996,
                            "id": 7014,
                            "nodeType": "Return",
                            "src": "1006:17:44"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 7016,
                      "nodeType": "TryCatchClause",
                      "src": "991:40:44"
                    }
                  ],
                  "externalCall": {
                    "arguments": [
                      {
                        "id": 7001,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6992,
                        "src": "916:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 6998,
                            "name": "nftContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6990,
                            "src": "890:11:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 6997,
                          "name": "IMINTEDNFT721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5171,
                          "src": "876:13:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IMINTEDNFT721_$5171_$",
                            "typeString": "type(contract IMINTEDNFT721)"
                          }
                        },
                        "id": 6999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "876:26:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMINTEDNFT721_$5171",
                          "typeString": "contract IMINTEDNFT721"
                        }
                      },
                      "id": 7000,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tokenCreator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5170,
                      "src": "876:39:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_payable_$",
                        "typeString": "function (uint256) view external returns (address payable)"
                      }
                    },
                    "id": 7002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "876:48:44",
                    "tryCall": true,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 7017,
                  "nodeType": "TryStatement",
                  "src": "872:159:44"
                }
              ]
            },
            "documentation": {
              "id": 6988,
              "nodeType": "StructuredDocumentation",
              "src": "518:245:44",
              "text": " @dev If the creator is not available then 0x0 is returned. Downstream this indicates that the creator\n fee should be sent to the current seller instead.\n This may apply when selling NFTs that were not minted on Minted."
            },
            "id": 7019,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCreator",
            "nameLocation": "776:10:44",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6993,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6990,
                  "mutability": "mutable",
                  "name": "nftContract",
                  "nameLocation": "795:11:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 7019,
                  "src": "787:19:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6989,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "787:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6992,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "816:7:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 7019,
                  "src": "808:15:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6991,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "808:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "786:38:44"
            },
            "returnParameters": {
              "id": 6996,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6995,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7019,
                  "src": "848:15:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 6994,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "848:15:44",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "847:17:44"
            },
            "scope": 7024,
            "src": "767:269:44",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7023,
            "mutability": "mutable",
            "name": "______gap",
            "nameLocation": "1138:9:44",
            "nodeType": "VariableDeclaration",
            "scope": 7024,
            "src": "1117:30:44",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$500_storage",
              "typeString": "uint256[500]"
            },
            "typeName": {
              "baseType": {
                "id": 7020,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1117:7:44",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 7022,
              "length": {
                "hexValue": "353030",
                "id": 7021,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1125:3:44",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_500_by_1",
                  "typeString": "int_const 500"
                },
                "value": "500"
              },
              "nodeType": "ArrayTypeName",
              "src": "1117:12:44",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$500_storage_ptr",
                "typeString": "uint256[500]"
              }
            },
            "visibility": "private"
          }
        ],
        "scope": 7025,
        "src": "388:763:44",
        "usedErrors": []
      }
    ],
    "src": "49:1102:44"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.9+commit.e5eed63a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2022-03-24T15:32:37.474Z",
  "devdoc": {
    "details": "In the future this may store creators directly in order to support NFTs created on a different platform.",
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "A mixin for associating creators to NFTs.",
    "version": 1
  }
}