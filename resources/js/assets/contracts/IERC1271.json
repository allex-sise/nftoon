{
  "contractName": "IERC1271",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "isValidSignature",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "magicValue",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC1271 standard signature validation method for contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271]. from https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/interfaces/IERC1271.sol\",\"kind\":\"dev\",\"methods\":{\"isValidSignature(bytes32,bytes)\":{\"details\":\"Should return whether the signature provided is valid for the provided data\",\"params\":{\"hash\":\"Hash of the data to be signed\",\"signature\":\"Signature byte array associated with _data\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/minted/interfaces/IERC1271.sol\":\"IERC1271\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/minted/interfaces/IERC1271.sol\":{\"keccak256\":\"0xf25f8809befa0f9e273e8168f2b31a57cc4fec52360543d43f00beb6a23e4521\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acbed94fbbd187c29ce4659db436106cd140eec828f95f8d4e06ea8666b57002\",\"dweb:/ipfs/QmfUiqQocQ3obZAEnPNAAmQTkzaeBfsc1DmVEogr1HcvhJ\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC1271 standard signature validation method for\r\n * contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271].\r\n *\r\n * from https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/interfaces/IERC1271.sol\r\n */\r\ninterface IERC1271 {\r\n  /**\r\n   * @dev Should return whether the signature provided is valid for the provided data\r\n   * @param hash      Hash of the data to be signed\r\n   * @param signature Signature byte array associated with _data\r\n   */\r\n  function isValidSignature(bytes32 hash, bytes memory signature) external view returns (bytes4 magicValue);\r\n}",
  "sourcePath": "C:\\alex\\nft\\openZeppelin\\mintedBasic\\contracts\\minted\\interfaces\\IERC1271.sol",
  "ast": {
    "absolutePath": "project:/contracts/minted/interfaces/IERC1271.sol",
    "exportedSymbols": {
      "IERC1271": [
        5161
      ]
    },
    "id": 5162,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5149,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:28"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IERC1271",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 5150,
          "nodeType": "StructuredDocumentation",
          "src": "62:276:28",
          "text": " @dev Interface of the ERC1271 standard signature validation method for\n contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271].\n from https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/interfaces/IERC1271.sol"
        },
        "fullyImplemented": false,
        "id": 5161,
        "linearizedBaseContracts": [
          5161
        ],
        "name": "IERC1271",
        "nameLocation": "350:8:28",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 5151,
              "nodeType": "StructuredDocumentation",
              "src": "364:216:28",
              "text": " @dev Should return whether the signature provided is valid for the provided data\n @param hash      Hash of the data to be signed\n @param signature Signature byte array associated with _data"
            },
            "functionSelector": "1626ba7e",
            "id": 5160,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isValidSignature",
            "nameLocation": "593:16:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5156,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5153,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "618:4:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 5160,
                  "src": "610:12:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5152,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "610:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5155,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "637:9:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 5160,
                  "src": "624:22:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5154,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "624:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "609:38:28"
            },
            "returnParameters": {
              "id": 5159,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5158,
                  "mutability": "mutable",
                  "name": "magicValue",
                  "nameLocation": "678:10:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 5160,
                  "src": "671:17:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 5157,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "671:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "670:19:28"
            },
            "scope": 5161,
            "src": "584:106:28",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 5162,
        "src": "340:353:28",
        "usedErrors": []
      }
    ],
    "src": "35:658:28"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/minted/interfaces/IERC1271.sol",
    "exportedSymbols": {
      "IERC1271": [
        5161
      ]
    },
    "id": 5162,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5149,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:28"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IERC1271",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 5150,
          "nodeType": "StructuredDocumentation",
          "src": "62:276:28",
          "text": " @dev Interface of the ERC1271 standard signature validation method for\n contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271].\n from https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/interfaces/IERC1271.sol"
        },
        "fullyImplemented": false,
        "id": 5161,
        "linearizedBaseContracts": [
          5161
        ],
        "name": "IERC1271",
        "nameLocation": "350:8:28",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 5151,
              "nodeType": "StructuredDocumentation",
              "src": "364:216:28",
              "text": " @dev Should return whether the signature provided is valid for the provided data\n @param hash      Hash of the data to be signed\n @param signature Signature byte array associated with _data"
            },
            "functionSelector": "1626ba7e",
            "id": 5160,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isValidSignature",
            "nameLocation": "593:16:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5156,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5153,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "618:4:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 5160,
                  "src": "610:12:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5152,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "610:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5155,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "637:9:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 5160,
                  "src": "624:22:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5154,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "624:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "609:38:28"
            },
            "returnParameters": {
              "id": 5159,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5158,
                  "mutability": "mutable",
                  "name": "magicValue",
                  "nameLocation": "678:10:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 5160,
                  "src": "671:17:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 5157,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "671:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "670:19:28"
            },
            "scope": 5161,
            "src": "584:106:28",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 5162,
        "src": "340:353:28",
        "usedErrors": []
      }
    ],
    "src": "35:658:28"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.9+commit.e5eed63a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2022-03-24T15:32:37.375Z",
  "devdoc": {
    "details": "Interface of the ERC1271 standard signature validation method for contracts as defined in https://eips.ethereum.org/EIPS/eip-1271[ERC-1271]. from https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/interfaces/IERC1271.sol",
    "kind": "dev",
    "methods": {
      "isValidSignature(bytes32,bytes)": {
        "details": "Should return whether the signature provided is valid for the provided data",
        "params": {
          "hash": "Hash of the data to be signed",
          "signature": "Signature byte array associated with _data"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}